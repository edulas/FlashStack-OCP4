#ONTAP Info for FCP Lifs
- name: ONTAP Info
  na_ontap_info:
    state: info
    hostname: "{{inventory_hostname}}"
    username: "{{username}}"
    password: "{{password}}"
    http_port: null
    https: true
    validate_certs: false
    gather_subset: "net_interface_info"
  register: ontap_info
  when: "('fcp' in allowed_protocols)"
  tags:
    - ontap_info_fcp

- copy:
    content: '{{ ontap_info | to_nice_json }}'
    dest: vars/generated/ontap_info
  when: "('fcp' in allowed_protocols)"
  tags:
    - ontap_info_fcp

- name: Creating list of all LIFs
  set_fact:
    temp: "{{ ontap_info.ontap_info.net_interface_info.keys() | list}}"
  when: "('fcp' in allowed_protocols)"
  tags:
    - ontap_info_fcp

- name: Fetching FCP LIFs
  set_fact:
    temp1: "{{ temp1|default([]) + [ item ] }}"
  with_items:
    - "{{ temp }}"
  when: 
    - "('fcp' in allowed_protocols)"
    - '"fcp" in item'
  tags:
    - ontap_info_fcp

- name: Populating dictionary for 'A'
  vars:
    addr: "{{ontap_info.ontap_info.net_interface_info[item].wwpn }}"
  set_fact:
    dict_A: "{{ dict_A|default([]) + [ {'name': item, 'pwwn': addr } ] }}"
  with_items:
    - "{{ temp1 }}"
  when: 
    - "('fcp' in allowed_protocols)"
    - '"a" in item'
  tags:
    - ontap_info_fcp

- copy:
    content: '{{ dict_A | to_nice_json }}'
    dest: vars/generated/ontap_wwpn_a
  when: "('fcp' in allowed_protocols)"
  tags:
    - ontap_info_fcp

- name: Populating dictionary for 'B'
  vars:
    addr: "{{ontap_info.ontap_info.net_interface_info[item].wwpn }}"
  set_fact:
    dict_B: "{{ dict_B|default([]) + [ {'name': item, 'pwwn': addr } ] }}"
  with_items:
    - "{{ temp1 }}"
  when: 
    - "('fcp' in allowed_protocols)"
    - '"b" in item'
  tags:
    - ontap_info_fcp

- copy:
    content: '{{ dict_B | to_nice_json }}'
    dest: vars/generated/ontap_wwpn_b
  when: "('fcp' in allowed_protocols)"
  tags:
    - ontap_info_fcp

#ONTAP Info for iSCSI IQN
- name: ONTAP Info for iSCSI IQN
  na_ontap_info:
    state: info
    hostname: "{{inventory_hostname}}"
    username: "{{username}}"
    password: "{{password}}"
    http_port: null
    https: true
    validate_certs: false
    gather_subset: "iscsi_service_info"
  register: ontap_info_iqn
  when: "('iscsi' in allowed_protocols)"
  tags:
    - ontap_info_iqn

- copy:
    content: '{{ ontap_info_iqn | to_nice_json }}'
    dest: vars/generated/ontap_info_iqn
  when: "('iscsi' in allowed_protocols)"
  tags:
    - ontap_info_iqn

