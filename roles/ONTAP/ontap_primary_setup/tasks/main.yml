---
# Ensure the port personalities for the ONTAP cluster
- name: Port personalities for the ONTAP Cluster
  na_ontap_ucadapter: 
    state: present 
    node_name: "{{ item.0.node_name}}" 
    adapter_name: "{{item.1 }}" 
    # regex_replace('^e(.*)$','\\1')
    mode: "{{port_mode}}" 
    type: "{{port_type}}" 
    hostname: "{{inventory_hostname}}" 
    username: "{{username}}" 
    password: "{{password}}" 
    https: true 
    validate_certs: false
  with_subelements: 
    - "{{node_uta_ports}}"
    - uta_ports
  when: node_uta_ports.uta_ports is defined
  tags:
    - ontap_config_port_personality

# Ensure that the auto-revert parameter is set for the cluster management interface
- name: Ensure auto-revert is set for the cluster management interface
  na_ontap_interface: 
    vserver: "{{cluster_name}}" 
    is_auto_revert: "{{cluster_mgmt_auto_revert}}" 
    interface_name: "{{cluster_mgmt_interface}}" 
    hostname: "{{inventory_hostname}}" 
    username: "{{username}}" 
    password: "{{password}}" 
    https: true 
    validate_certs: false
  tags:
    - ontap_config_cluster_mgmt

# Ensure that the default route is in place for the cluster SVM
#- name: Ensure that the default route is set for the cluster SVM
#  na_ontap_net_routes: hostname="{{inventory_hostname}}" username="{{username}}" password="{{password}}" state="{{item.state}}" vserver="{{item.vserver}}" destination="{{item.destination}}" gateway="{{item.gateway}}" metric="{{ item.metric | default('20') }}"
#  with_items:
#    - "{{ ontap_route_parameters }}"
#  tags:
#    - ontap_create_route

# Setting up the managment broadcast domain
- name: Removing the 10G ports from the management broadcast domain
  na_ontap_broadcast_domain_ports:  
    state: absent 
    broadcast_domain: Default 
    ports: "{{item.0.node_name}}:{{item.1}}"
    hostname: "{{inventory_hostname}}" 
    username: "{{username}}" 
    password: "{{password}}" 
    https: true 
    validate_certs: false
  with_subelements:
    - "{{node_ports}}"
    - ports
  tags:
    - ontap_config_broadcast_domain
 
#Set up the service processor network interface
- name: Set the Service processor network interface
  na_ontap_service_processor_network:  
    state: present 
    ip_address: "{{item.ip}}" 
    netmask: "{{item.mask}}" 
    gateway_ip_address: "{{item.gateway}}" 
    node: "{{item.node}}" 
    is_enabled: true 
    address_type: ipv4
    hostname: "{{inventory_hostname}}" 
    username: "{{username}}" 
    password: "{{password}}" 
    https: true 
    validate_certs: false 
  with_items:
    - "{{ sp }}"
  tags:
    - ontap_config_sp_interface

# Create data aggregates
- name: Create the data aggregates 
  na_ontap_aggregate:  
    state: present 
    name: "{{item.0.aggr_name}}" 
    disk_count: "{{item.0.diskcount}}" 
    nodes: "{{item.1}}"
    hostname: "{{inventory_hostname}}" 
    username: "{{username}}" 
    password: "{{password}}" 
    https: true 
    validate_certs: false  
  with_together: 
    - "{{data_aggregates}}"
    - "{{nodes}}"
  tags:
    - ontap_create_data_aggr

#Rename the root aggregates
# - name: Rename the root aggregate for node01
#   na_ontap_aggregate: hostname="{{inventory_hostname}}" username="{{username}}" password="{{password}}" state=present from_name=aggr0_Ansible_lab1_01 name=aggr0_node01 https=true validate_certs=false
#   tags:
#     - ontap_rename_root_aggr

# - name: Rename the root aggregate for node02
#   na_ontap_aggregate: hostname="{{inventory_hostname}}" username="{{username}}" password="{{password}}" state=present from_name=aggr0_Ansible_lab1_02 name=aggr0_node02 https=true validate_certs=false
#   tags:
#     - ontap_rename_root_aggr

#Ensure the cluster HA status
- name: Ensure cluster HA status
  na_ontap_cluster_ha: 
    state: present 
    hostname: "{{inventory_hostname}}" 
    username: "{{username}}" 
    password: "{{password}}" 
    https: true 
    validate_certs: false 
  tags:
    - ontap_check_cluster_ha

#Disable flow control on the 10GbE and 40GbE ports
- name: Disable flow control on the 10GbE and 40Gbe ports 
  na_ontap_net_port: 
    state: present 
    flowcontrol_admin: none 
    node: "{{item.0.node_name}}" 
    port: "{{item.1}}"
    hostname: "{{inventory_hostname}}" 
    username: "{{username}}" 
    password: "{{password}}" 
    https: true 
    validate_certs: false 
  with_subelements: 
    - "{{node_ports}}"
    - ports
  tags:
    - ontap_disable_flowcontrol

#Enable CDP on the Storage Controller Nodes
- name: Enable CDP on the Storage Controller Nodes
  na_ontap_command: 
    command: "['node', 'run', '-node', '{{item}}', 'options', 'cdpd.enable', 'on']"
    hostname: "{{inventory_hostname}}" 
    username: "{{username}}" 
    password: "{{password}}" 
    https: true 
    validate_certs: false 
  with_items:
    - "{{nodes}}"
  tags:
    - ontap_enable_cdp

#Enable LLDP on the Storage Controller Nodes
- name: Enable LLDP on the Storage Controller Nodes
  na_ontap_command: 
    command: "['node', 'run', '-node', '{{item}}', 'options', 'lldp.enable', 'on']"
    hostname: "{{inventory_hostname}}" 
    username: "{{username}}" 
    password: "{{password}}" 
    https: true 
    validate_certs: false 
  with_items:
    - "{{nodes}}"
  tags:
    - ontap_enable_lldp

# Configure DNS
- name: Configure DNS
  na_ontap_dns: 
    state: present 
    vserver: "{{cluster_name}}" 
    nameservers: "{{dns_server}}" 
    domains: "{{dns_domain}}" 
    hostname: "{{inventory_hostname}}" 
    username: "{{username}}" 
    password: "{{password}}" 
    https: true 
    validate_certs: false 
  tags:
    - ontap_config_dns

# Configure NTP server
- name: Configure NTP
  na_ontap_ntp: 
    state: present 
    server_name: "{{item}}" 
    hostname: "{{inventory_hostname}}" 
    username: "{{username}}" 
    password: "{{password}}" 
    https: true 
    validate_certs: false 
  with_items:
    - "{{ntp_server}}"
  tags:
    - ontap_config_ntp

- name: Enable Takeover for Storage Failover
  na_ontap_command: 
    command: "['storage', 'failover', 'modify', '-node', '{{item}}', '-enabled', 'true']"
    hostname: "{{inventory_hostname}}" 
    username: "{{username}}" 
    password: "{{password}}" 
    https: true 
    validate_certs: false 
  with_items:
    - "{{nodes}}"
  tags:
    - ontap_validate_storage_failover_state

- name: Set Cluster's Timezone
  na_ontap_command: 
    command: "['cluster', 'date', 'modify', '-timezone', '{{timezone}}']"
    hostname: "{{inventory_hostname}}" 
    username: "{{username}}" 
    password: "{{password}}" 
    https: true 
    validate_certs: false 
  tags:
    - ontap_set_timezone

- name: Enable Hardware assist failover
  na_ontap_command: 
    command: "['storage', 'failover', 'modify', '-node', '{{nodes[0]}}', '-hwassist', 'true', '-hwassist-partner-ip', '{{ontap_b}}']"
    hostname: "{{inventory_hostname}}" 
    username: "{{username}}" 
    password: "{{password}}" 
    https: true 
    validate_certs: false
  tags:
    - ontap_enable_hwassist_a

- name: Enable Hardware assist failover
  na_ontap_command: 
    command: "['storage', 'failover', 'modify', '-node', '{{nodes[1]}}', '-hwassist', 'true', '-hwassist-partner-ip', '{{ontap_a}}']"
    hostname: "{{inventory_hostname}}" 
    username: "{{username}}" 
    password: "{{password}}" 
    https: true 
    validate_certs: false
  tags:
    - ontap_enable_hwassist_b

- name: FCP Adapter Settings Node A
  na_ontap_command:
    command: "['fcp', 'adapter', 'modify', '-node', '{{ nodes[0] }}', '-adapter', '{{ item }}', '-status-admin', 'down']"
    hostname: "{{inventory_hostname}}"
    username: "{{username}}"
    password: "{{password}}"
    https: true
    validate_certs: false
  with_items:
    - "{{ node_fcp_ports }}"
  when: "('fcp' in allowed_protocols)"
  tags:
    - ontap_fc_adapters

- name: FCP Adapter Settings Node B
  na_ontap_command:
    command: "['fcp', 'adapter', 'modify', '-node', '{{ nodes[1] }}', '-adapter', '{{ item }}', '-status-admin', 'down']"
    hostname: "{{inventory_hostname}}"
    username: "{{username}}"
    password: "{{password}}"
    https: true
    validate_certs: false
  with_items:
    - "{{ node_fcp_ports }}"
  when: "('fcp' in allowed_protocols)"
  tags:
    - ontap_fc_adapters

- name: FCP Adapter Settings Part II Node A 
  na_ontap_command:
    command: "['fcp', 'adapter', 'modify', '-node', '{{ nodes[0] }}', '-adapter', '{{ item }}', '-speed', '{{ fcp_port_speed }}', '-status-admin', 'up']"
    hostname: "{{inventory_hostname}}"
    username: "{{username}}"
    password: "{{password}}"
    https: true
    validate_certs: false
  with_items:
    - "{{ node_fcp_ports }}"  
  when: "('fcp' in allowed_protocols)"
  tags:
    - ontap_fc_adapters

- name: FCP Adapter Settings Part II Node B
  na_ontap_command:
    command: "['fcp', 'adapter', 'modify', '-node', '{{ nodes[1] }}', '-adapter', '{{ item }}', '-speed', '{{ fcp_port_speed }}', '-status-admin', 'up']"
    hostname: "{{inventory_hostname}}"
    username: "{{username}}"
    password: "{{password}}"
    https: true
    validate_certs: false
  with_items:
    - "{{ node_fcp_ports }}"
  when: "('fcp' in allowed_protocols)"
  tags:
    - ontap_fc_adapters

# Configure autosupport
- name: Configure autosupport
  na_ontap_autosupport: 
    mail_hosts: "{{autosupport_vars.mail_hosts}}" 
    node_name: "{{item}}" 
    noteto: "{{autosupport_vars.noteto}}" 
    transport: https 
    post_url: "{{autosupport_vars.post_url | default(omit)}}" 
    support: yes 
    state: present 
    hostname: "{{inventory_hostname}}" 
    username: "{{username}}" 
    password: "{{password}}" 
    https: true 
    validate_certs: false
  with_items:
    - "{{nodes}}"
  tags:
    - ontap_config_autosupport

#Add ONTAP Licenses
- name: Add licenses 
  na_ontap_license:
    hostname: "{{inventory_hostname}}"
    username: "{{username}}"
    password: "{{password}}"
    state: present
    https: true
    validate_certs: false
    license_codes: "{{ ontap_license }}"
  tags:
    - ontap_license
